name: Python package

on: [push, pull_request]

jobs:
  format:
    # We want all subsequent steps of CI to refer to the fresh version of code,
    # so run this before anything else.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:  # https://github.com/stefanzweifel/git-auto-commit-action#checkout-the-correct-branch
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v2
      - run: pip install black
      - run: black --check .
      - name: If needed, commit black changes to the pull request
        if: failure()
        run: |
          printenv | grep GITHUB
          git config --global user.name 'hancush'
          git config --global user.email 'hancush@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git remote -v
          git branch
          git status
          black .
          git status
          echo ready to commit
          git commit -am "fixup! Format Python code with psf/black pull_request"
          echo ready to push
          git push

  test:
    needs: format
    container:
      runs-on: ubuntu-latest
      container: centerforopenscience/unoconv
      services:
        postgres:
          image: postgis/postgis:14-3.2
          env:
            POSTGRES_DB: django_councilmatic
            POSTGRES_PASSWORD: postgres
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 5432:5432

      steps:
      - name: System dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gdal-bin
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
          pip install -e .
      - name: Test with pytest
        run: |
          python -m pytest -sv

  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Build and publish
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        pip install twine wheel
        pip wheel -w dist --no-deps .
        python setup.py sdist
        twine upload dist/*
      continue-on-error: true
